/*
 * Copyright 2018 The Data-Portability Project Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group = "${projectGroup}"
version = "${projectVersion}"

description = """Portability Worker"""

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    // TODO: consider fatjar plugin
    // Add dependencies
    from({
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }) {
        // Exclude signature files to avoid SecurityException
        exclude '**/META-INF/*.SF'
        exclude '**/META-INF/*.DSA'
        exclude '**/META-INF/*.RSA'
    }
    manifest {
        attributes 'Main-Class': 'org.dataportabilityproject.worker.WorkerMain'
    }
}

// This is brought in by lower level dependencies, so we remove it globally
configurations {
    all*.exclude group: 'com.google.guava', module: 'guava-jdk5'
}

dependencies {
    compile project(':portability-core')

    compile("com.flickr4java:flickr4java:${flickrVersion}")
    compile("com.google.apis:google-api-services-calendar:${googleCalendarVersion}")
    compile("com.google.apis:google-api-services-gmail:${googleGmailVersion}")
    compile("com.google.apis:google-api-services-tasks:${googleTasksVersion}")
    compile("com.google.gdata:core:${gdataVersion}") {
        exclude(module: 'jetty-util')
        exclude(module: 'servlet-api')
    }
    compile("com.google.code.gson:gson:${gsonVersion}")
    compile("com.google.guava:guava:${guavaVersion}")
    compile("com.google.http-client:google-http-client:${googleApiClient}")
    compile("com.google.http-client:google-http-client-xml:${googleApiClient}")
    compile("com.google.oauth-client:google-oauth-client:${googleApiClient}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")

    testCompile("com.google.truth:truth:${truthVersion}")
    testCompile("junit:junit:${junitVersion}")
}
