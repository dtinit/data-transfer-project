/*
 * Copyright 2018 The Data-Portability Project Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group = "${projectGroup}"
version = "${projectVersion}"

description = """Portability Core Library"""

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// This is brought in by lower level dependencies, so we remove it globally
configurations {
    all*.exclude group: 'com.google.guava', module: 'guava-jdk5'
}

dependencies {
    compile("com.google.auto.value:auto-value:${autoValueVersion}")
    compile("javax.annotation:javax.annotation-api:${annotationApiVersion}")
    compile("com.auth0:java-jwt:${jwtVersion}")
    compile("com.flickr4java:flickr4java:${flickrVersion}")
    compile("com.google.api-client:google-api-client:${googleApiClient}")
    compile("com.google.apis:google-api-services-calendar:${googleCalendarVersion}")
    compile("com.google.apis:google-api-services-cloudkms:${googleKmsVersion}")
    compile("com.google.apis:google-api-services-gmail:${googleGmailVersion}")
    compile("com.google.apis:google-api-services-people:${googlePeopleVersion}")
    compile("com.google.apis:google-api-services-tasks:${googleTasksVersion}")
    compile("com.google.cloud:google-cloud-storage:${googleDatastoreVersion}")
    compile("com.google.cloud:google-cloud-datastore:${googleDatastoreVersion}")
    compile("com.google.code.gson:gson:${gsonVersion}")
    compile("com.google.gdata:core:${gdataVersion}") {
        exclude(module: 'jetty-util')
        exclude(module: 'servlet-api')
    }
    compile("com.google.inject.extensions:guice-multibindings:${guiceVersion}")
    compile("com.google.inject:guice:${guiceVersion}")
    compile("com.google.guava:guava:${guavaVersion}")
    compile("com.google.http-client:google-http-client:${googleApiClient}")
    compile("com.google.http-client:google-http-client-xml:${googleApiClient}")
    compile("com.google.oauth-client:google-oauth-client:${googleApiClient}")
    compile("com.google.oauth-client:google-oauth-client-jetty:${googleApiClient}")
    compile("com.googlecode.ez-vcard:ez-vcard:${ezVcardVersion}")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
    compile("org.apache.httpcomponents:httpclient:${httpclientVersion}")
    compile("oauth.signpost:signpost-commonshttp4:${signpostVersion}")
    // Logging
    compile("org.slf4j:slf4j-api:${slf4jVersion}")
    compile("org.slf4j:slf4j-log4j12:${slf4jVersion}")

    testCompile("com.jayway.jsonpath:json-path:${jaywayVersion}")
    testCompile("com.google.truth:truth:${truthVersion}")
    testCompile("junit:junit:${junitVersion}")
    testCompile("org.hamcrest:hamcrest-core:${hamcrestVersion}")
}
