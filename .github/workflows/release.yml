name: Release

permissions:
  # The commitizen action pushes a new commit to the main
  # branch to generate the changelog + tag, so needs write
  # permission
  contents: write

on:
  push:
    branches:
      - 'master'

jobs:
  bump_version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version"
    outputs:
      version: ${{ steps.cz.outputs.version }}
    steps:
      # To push to the repo an bypass the PR requirement, we need
      # to use an App since the default github actions-provided token
      # can't be configured to bypass requirements.
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch tags, which are required to calculate the new version
          token: ${{ steps.app-token.outputs.token }}
      - id: cz
        name: "Generate Changelog and Tag"
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ steps.app-token.outputs.token }}
  release:
    needs: bump_version
    runs-on: ubuntu-latest
    name: "Release"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump_version.outputs.version }}
      - name: "Set up JDK"
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: "Sign and Release"
        env:
          GRADLE_SIGNING_KEY: "${{ secrets.GRADLE_SIGNING_KEY }}"
          GRADLE_SIGNING_PASSWORD: "${{ secrets.GRADLE_SIGNING_PASSWORD }}"
          OSSRH_USERNAME: "${{ secrets.OSSRH_USERNAME }}"
          OSSRH_PASSWORD: "${{ secrets.OSSRH_PASSWORD }}"
        # Exclude client-rest as it's not part of the java release
        run: ./gradlew clean build sign uploadArchives --exclude-task :client-rest:uploadArchives
