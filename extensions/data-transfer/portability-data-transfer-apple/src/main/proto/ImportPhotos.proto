/*
 * Copyright 2023 The Data Transfer Project Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";
package photosproto;

option java_package="org.datatransferproject.datatransfer.apple.photos.photosproto";

option java_outer_classname="PhotosProtocol";

message AuthorizeUploadRequest {
  optional string dataId = 1; // unique for each item within a GetUploadUrlsRequest
  optional uint64 filesize = 2;
}

message GetUploadUrlsRequest {
  repeated AuthorizeUploadRequest uploadRequests = 1;
  optional string importSessionId = 2; // valid UUID, unique per import session & consistent between batches
  optional string dataClass = 3;
  optional string exportService = 4;
}

message AuthorizeUploadResponse {
  optional string dataId = 1;
  optional string uploadUrl = 2;
  optional Status status = 3;
}

message GetUploadUrlsResponse {
  repeated AuthorizeUploadResponse urlResponses = 1;
  optional string importSessionId = 2; // valid UUID, unique per import session & consistent between batches
}

message Status {
  optional int32 code = 1;
  optional string message = 2;
}

message NewMediaRequest {
  optional string dataId = 1;
  optional string filename = 2;
  optional string description = 3;
  optional string albumId = 4;
  optional string mediaType = 5;
  optional string encodingFormat = 6;
  optional uint64 creationDateInMillis = 7;
  optional string singleFileUploadResponse = 8;
  optional uint64 isFavorite = 9; // boolean delivered as int; will always be 1 (true) or 0 (false)
}

message CreateMediaRequest {
  repeated NewMediaRequest newMediaRequests = 1;
  optional string importSessionId = 2; // valid UUID, unique per import session & consistent between batches
  optional string dataClass = 3;
}

message NewMediaResponse {
  optional string dataId = 1;
  optional string filename = 2;
  optional string description = 3;
  optional string albumId = 4;
  optional string mediaType = 5;
  optional string encodingFormat = 6;
  optional uint64 filesize = 7;
  optional uint64 creationDateInMillis = 8;
  optional string recordId = 9;
  optional Status status = 10;
}

message CreateMediaResponse {
  repeated NewMediaResponse newMediaResponses = 1;
  optional string importSessionId = 2; // valid UUID, unique per import session & consistent between batches
}

message NewPhotoAlbumRequest {
  optional string dataId = 1; // unique for each NewPhotoAlbumRequest
  optional string name = 2;
}

message NewPhotoAlbumResponse {
  optional string dataId = 1; // unique for each NewPhotoAlbumRequest
  optional string name = 2;
  optional string recordId = 4;
  optional Status status = 5;
}

message CreateAlbumsRequest {
  optional string importSessionId = 1; // valid UUID, unique per import session & consistent between batches
  repeated NewPhotoAlbumRequest newPhotoAlbumRequests = 2;
  optional string exportService = 3;
  optional string dataClass = 4;
}

message CreateAlbumsResponse {
  optional string importSessionId = 1; // valid UUID, unique per import session & consistent between batches
  repeated NewPhotoAlbumResponse newPhotoAlbumResponses = 2;
}
